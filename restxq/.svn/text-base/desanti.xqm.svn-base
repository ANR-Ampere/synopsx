module namespace desanti = 'http://ahn.ens-lyon.fr/desanti';

import module namespace ahn = 'http://ahn.ens-lyon.fr' at 'ahn.xqm';

declare namespace db = 'http://basex.org/modules/db';
(:declare namespace ft = 'http://basex.org/modules/ft';:)
declare namespace json = 'http://basex.org/modules/json';
declare namespace mml="http://www.w3.org/1998/Math/MathML";
declare namespace tei = 'http://www.tei-c.org/ns/1.0/';
declare namespace xslt="http://basex.org/modules/xslt";

(:declare copy-namespaces no-preserve,no-inherit;:)

declare default collation 'http://basex.org/collation?lang=fr;strength=secondary';

declare variable $desanti:xslt := "http://basex.tge-adonis.fr/static/xsl/desanti.xsl";





(: Bloc Page non trouvée :)
declare function desanti:notFound($params) {
	<div>
	<h2>Page non trouvée</h2>
	Les paramètres transmis étaient :
	<ul>
	{ for $param in $params/*
	       let $name := $param/@name
	      return <li>{string($name)} : {$param/text()}</li>
	}
	</ul>
	</div>
};



declare function desanti:head($params){
  <head>
      <title>{map:get($params,"project")}</title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0"/> 
      <link href="http://basex.tge-adonis.fr/static/css/bootstrap.css" rel="stylesheet" media="screen"/> 
	<link href="http://basex.tge-adonis.fr/static/css/ahn.css" rel="stylesheet" media="screen"/>
       <link href="http://basex.tge-adonis.fr/static/css/desanti.css" rel="stylesheet" media="screen"/>
      
    </head>
};


(: Chaque projet peut importer ses librairies js spécifiques :)
declare function desanti:scripts_js($params){
   
  <div id="scripts_js">
      <script src="http://code.jquery.com/jquery.js"></script>
      <script src="http://basex.tge-adonis.fr/static/js/bootstrap.min.js"></script>
      <!--<script src="http://basex.tge-adonis.fr/static/js/mathjax/MathJax.js?config=MML_HTMLorMML-full"></script>-->
    </div>
};


(: Bloc Header :)
declare function desanti:header($params){
  <div class="container" id="header">
    <div class="row">
      <div class="span5">
        <img class="logo" src="http://desanti.tge-adonis.fr/archivenumerique/archive/theme_uploads/d7ec7c6a7d12d6fd2a4fc79d5f41be43.jpg" alt="Accueil" width="200"/>
      </div>
      <div class="span2">
        <img class="logo-tutelle" src="http://desanti.tge-adonis.fr/archivenumerique/archive/theme_uploads/logo-partenaire.png" width="121" alt="ENS Lyon"/>
      </div>
    </div>
    <div class="row">
      <div class="span12">
      <img src="http://desanti.tge-adonis.fr/archivenumerique/archive/theme_uploads/8f84176a946f1ffe5f53ef85a311408f.png" width="960" height="138" alt="desanti"/>
      </div>
    </div>
  </div>
};

(: Bloc Primary-nav :)
declare function desanti:primary-nav($params){
   <nav class="container navbar" id="primary-nav">
   
    <ul class="nav nav-pills">
      <li><a href="/desanti/catalogue">Catalogue des notices</a></li>
      <li><a href="/desanti/transcriptions">Transcriptions</a></li>
      <li><a href="/desanti/dossiers">Dossiers thématiques</a></li>
      <li><a href="/desanti/dictionnaire">Dictionnaire Desanti</a></li>
      <li class="dropdown">
        <a class="dropdown-toggle" data-toggle="dropdown" href="#">Autres ressources
        <b class="caret"></b>
        </a>
        <ul class="dropdown-menu">
            <li><a href="/desanti/bio">Repères biographiques</a></li>
            <li><a href="/desanti/biblio">Bibliographiqes</a></li>
            <li><a href="/desanti/icono">Iconographie</a></li>
            <li><a href="/desanti/audio-video">Sources audio-visuelles</a></li>
        </ul>
        </li>
      </ul>
  
  </nav>
};



declare function desanti:primary($params) {

let $dataType := map:get($params,"dataType")
let $value := map:get($params,"value")
return
  <div id="primary" class="{$dataType}">
         {let $primary-block :=
         
         switch($dataType)
            case "home" return 
                <section>
                 <h2>Archive Desanti</h2>
                 <p>Page d'accueil</p>
               </section>
    

           (: Bloc catalogue des notices : 
                       si seul le param $dataType=catalogue est passé, renvoie à l'accueil général des notices EAD
                       si les deux params $dataType=catalogue et $value=notice-id sont passé, renvoie la page de la notice EAD correspondante
           :)
           
           
               case "catalogue" return <section>
               {let $block := 
    
                        (: Cas 1 : Pas d'id de notice particulière -> Accueil de toutes les notices :)
                       if(empty($value)) then desanti:display-notices(collection("Desanti")/*:ead/*:archdesc/*:dsc//*:c)
                        (: Cas 2 : Affichage de la notice id=$value :)
                       else 
                        for $item in collection("Desanti")/*:ead/*:archdesc/*:dsc//*:c[contains(@id, concat($value, '-EAD'))]
                        
                           return
                            <div>
                           <h3>Pièce n° {$value} - {$item/*:did/*:unittitle//text()}</h3>
                           
                               
                               {xslt:transform($item/*:scopecontent, $desanti:xslt)}
                              <!-- <ul>
                               
                               {
                               let $sommaire := $item/*:scopecontent/*:list
                               for $entree in $sommaire/*:item
                                   return <li>{$entree}</li>
                               }
                               </ul>-->
                         </div>
                         
                         
                       return $block  
                       }</section>
                   





(: Bloc transcriptions : 
            si seul le param $dataType=transcriptions est passé, renvoie l'accueil général des transcriptions
            si les deux params $dataType=transcriptions et $value=text-id sont passés, renvoie la page de la transcription correspondant à text-id 
:)


            case "transcriptions" return <section>{
                
                let $block := 

                    
                    (: Cas 1 : Pas d'id de transcription particulière -> Accueil de toutes les transcriptions :)
                    if(empty($value)) then
                    <div>
                    <h2>Transcriptions</h2>
                    <ul>
                    {
                    for $item in collection("Desanti")/*:TEI[contains(@xml:id, "-TEI")]
                    order by $item/@xml:id
                    let $text-id := substring-before(substring-after($item/@xml:id, '-'), '-')
                    let $title := 
                           if (empty($item//*:titleStmt/*:title[@type='main']))
                            then $item//*:titleStmt/*:title/node()
                            else $item//*:titleStmt/*:title[@type='main']/node()
                             
                    return <li>{string($text-id)} - <a href="/desanti/transcriptions/{$text-id}">{$title}</a></li>
                    }
                    </ul>
                   </div>
                    
                    
                    
                    
                    (: Cas 2 : Affichage transcription id=$text :)
                    else 
                    <div>
                     <p>Transcription ms {$value}</p>
                     
                    {
                    for $item in collection("Desanti")/*:TEI[contains(@xml:id, concat($value, "-TEI"))]
                    let $titles := 
                           for $title in $item//*:titleStmt/*:title
                           
                           return <h3>{$title/@type}{$title/node()}</h3>
                           
                           
                    return <div>
                            {$titles}
                            {xslt:transform($item//*:text, $ahn:xslt)
                            
                            (:for $content in $item//*:body//*
                        let $modifiedcontent :=
                        copy $nomathml := $content
                            modify (delete node $nomathml//@*:mml,
                                    delete node $nomathml//@xmlns,
                                    for $node in $nomathml/*:formula//*
                                    return rename node $node as $node/local-name())
                         return $nomathml
                         return $modifiedcontent:) 
                            }</div>
                    
                    }</div>
                    
                    return $block

                    }</section>
                


(: Bloc dossiers thématiques : 
            si seul le param $dataType=dossiers est passé, renvoie l'accueil général des transcriptions
            si les deux params $dataType=dossiers et $value=dossier-id sont passé, renvoie la page du dossier correspondant
:)


                case "dossiers" return <section>{
                
                    let $block := 
                        if(empty($value)) then
                       <div>
                        <h2>Dossiers thématiques</h2>
                        <ul>
                        {
                        for $item in collection("Desanti")//*[contains(@xml:id, "DST-dossier")]
                        let $dossier-id := $item/@xml:id
                        return <li><a href="/desanti/dossiers/{$dossier-id}">{$item//*:titleStmt//*:title/text()}</a></li>
                        }
                        </ul>
                       </div>
                        else 
                            let $item := collection("Desanti")//*[@xml:id=$value]
                            return
                            <div>
                            <h2>{$item//*:titleStmt//*:title/text()}</h2>
                            {xslt:transform($item//*:text, $desanti:xslt)}
                            
                        </div>
                    return $block
                    }</section>



(: Bloc Dictionnaire : 
            si seul le param $dataType=dictionnaire est passé, renvoie l'accueil général du dictionnaire
            si les deux params $dataType=dictionnaire et $value=entry-id sont passé, renvoie la page de l'entrée de dictionnaire correspondant à entry-id 
:)

                    case "dictionnaire" return <section>{
                        
                        let $block := 
                        
                            if(empty($value)) then
                            <div>
                            <h2>Dictionnaire Desanti</h2>
                            <ul>
                            {
                            for $item in collection("Desanti")//TEI[@type="dictionnaire"]//div/p/list/item
                            return <li><a href="dictionnaire/{$item/@xml:id}">{$item/label/text()}</a></li>
                            }
                            </ul>
                            </div>
                            else 
                            <div>
                             <h2>Dictionnaire Desanti : {$value}</h2>
                             <p>
                            {
                            for $item in collection("Desanti")//TEI[@type="dictionnaire"]//div/p/list/item[@xml:id=$value]
                            return xslt:transform($item, $desanti:xslt)
                            }
                            </p>
                            </div>
                        return $block
                        }</section>

(: Blocs Concepts et Personnes : 
            si seul le param $dataType=tags est passé, renvoie l'accueil général des subjects/persname
            si les deux params $dataType=tags et $value=tag-id sont passé, renvoie la page du mot-clé correspondant à tag-id 
:)
                    case "concepts" return  <section>{
                   
                       let $block := 
                       
                                    if(empty($value)) then desanti:display-tags(collection("Desanti")/*:ead/*:archdesc/*:dsc//*:c/*:controlaccess/*:subject, "subject", "cloud")
         
                                    else 
         
                                        <div>
                                        <h2>Pièces étiquetées avec : {$value}</h2>
                                           {desanti:display-notices(collection("Desanti")/*:ead/*:archdesc/*:dsc//*:c[./*:controlaccess/*:subject/text() = $value])}  
                                        </div>
                                    return $block
                                     }</section>
                                     
                                     
                                     
                                     
                    case "personnes" return  <section>{
                           let $block := 
                                    if(empty($value)) then desanti:display-tags(collection("Desanti")/*:ead/*:archdesc/*:dsc//*:c/*:controlaccess/*:persname, "persname", "cloud")
                                    else
                                        <div>
                                        <p>Notices étiquetées avec : {$value}</p>
                                           {desanti:display-notices(collection("Desanti")/*:ead/*:archdesc/*:dsc//*:c[*:controlaccess/*:persname/text() = $value])}  
                                        </div>                 
                       return $block
                        }</section>

                   default return <section>page inconnue</section>
    
    return $primary-block
    }</div>
};










declare function desanti:secondary($params) {

let $dataType := map:get($params,"dataType")
let $value := map:get($params,"value")
return
  <div id="secondary" class="{$dataType}">
         {let $secondary-block :=
         
         switch($dataType)
         
         
                        case "home" return 
                            <nav>
                             
                             <p>Page d'accueil</p>
                           </nav>
                           
                           
                           
                           
                        case "catalogue" return <nav>{
                            let $block := 
                                if(empty($value)) then
                                <span>
                                            {desanti:display-tags(collection("Desanti")/*:ead/*:archdesc/*:dsc//*:c/*:controlaccess/*:subject, "subject", "list")}
                                            {desanti:display-tags(collection("Desanti")/*:ead/*:archdesc/*:dsc//*:c/*:controlaccess/*:persname, "persname", "list")}
                                </span>
                                
                                
                                
                                else 
                                <span>
                                {for $tei in collection("Desanti")/*:TEI[contains(@xml:id, concat($value, "-TEI"))]
                               return <a title="Transcription (TEI)" href="/desanti/transcriptions/{$value}">Lire la transcription de la pièce n°{$value}</a>
                               }
                                            {desanti:display-tags(collection("Desanti")/*:ead/*:archdesc/*:dsc//*:c[contains(@id, concat($value, '-EAD'))]/*:controlaccess/*:subject, "subject", "list")}
                                            {desanti:display-tags(collection("Desanti")/*:ead/*:archdesc/*:dsc//*:c[contains(@id, concat($value, '-EAD'))]/*:controlaccess/*:persname, "persname", "list")}
                                </span>
                                 
                            return $block
                        }</nav>
                        
                        case "transcriptions" return <nav>{
                            
                            let $block := 
                            
                                if(empty($value)) then
                                <p>
                                {collection("Desanti")/*:teiCorpus//*:teiCorpus[@xml:id ="transcriptions"]//*:profileDesc}
                                </p>
                                
                                
                                else                             
                                 <div><a title="Notice EAD" href="/desanti/catalogue/{$value}">Lire la notice archivistique de la pièce n°{$value}</a>
                                 {
                                for $item in collection("Desanti")/*[contains(@xml:id, concat($value, "-TEI"))]
                                return <p>{
                                $item//*:respStmt//text()
                                }</p>
                                }</div>
                                
                            return $block
                        }</nav>
                        
                         case "dossiers" return 
                               if(empty($value)) then <nav>Barre latérale dossiers documentaires</nav>
                               else 
                               <nav>
                               <h6>Lire les transcriptions de ce dossier</h6>
                               {let $item := collection("Desanti")//*[@xml:id=$value]
                               return
                                <ul>{
                                for $tei in $item//@idno
                                where collection("Desanti")/*[contains(@xml:id, concat($tei, "-TEI"))]
                                let $tei-title := collection("Desanti")/*[contains(@xml:id, concat($tei, "-TEI"))]//*:titleStmt/*:title/text()
                                return <li><a title="Pièce n°{string($tei)} : {$tei-title}" href="/desanti/transcriptions/{$tei}">{string($tei)}</a></li>
                                }</ul>
                                }</nav>
                         case "dictionnaire" return
                              <nav>
                                  Barre latérale
                              </nav>
                         case "concepts" return
                            if(empty($value)) then <nav>Barre latérale concepts</nav>
                            else
                            <nav>
                                           {desanti:display-tags(collection("Desanti")/*:ead/*:archdesc/*:dsc//*:c/*:controlaccess/*:subject, "subject", "list")}
                                           {desanti:display-tags(collection("Desanti")/*:ead/*:archdesc/*:dsc//*:c/*:controlaccess/*:persname, "persname", "list")}
                                </nav>
                           case "personnes" return
                            if(empty($value)) then <nav>Barre latérale personnes</nav>
                            else
                            <nav>
                                           {desanti:display-tags(collection("Desanti")/*:ead/*:archdesc/*:dsc//*:c/*:controlaccess/*:subject, "subject", "list")}
                                           {desanti:display-tags(collection("Desanti")/*:ead/*:archdesc/*:dsc//*:c/*:controlaccess/*:persname, "persname", "list")}
                                </nav>
                          default  return <nav>
                            page inconnue 
                            </nav>
                            
          return $secondary-block
          
          }</div>
};

declare function desanti:display-notices($collection) {
                        <table width="100%">
                       <caption>Catalogue des notices</caption>
                       <tr><th>N° pièce</th><th>Titre</th><th>Date(s)</th><th>Notice</th><th>Transcription</th></tr>
                       {
                       for $item in $collection
                       let $notice-id := substring-before(substring-after($item/@id, '-'), '-')
                       return <tr>
                       <td>{string($notice-id)}</td>
                       <td>{$item/*:did/*:unittitle}
                       </td>
                       <td>{$item/*:did/*:unitdate}</td>
                       <td>
                       {let $detail := 
                       if($item/*[not(local-name()='did')]) then <a  title="Lire la notice détaillée" href="/desanti/catalogue/{$notice-id}">EAD</a>
                       else ''
                       return $detail
                       }</td>
                       <td>{for $tei in collection("Desanti")/*:TEI[contains(@xml:id, concat($notice-id, "-TEI"))]
                               return  <a  title="Lire la transcription" href="/desanti/transcriptions/{$notice-id}">TEI</a>
                               }
                      </td>
                               
                       </tr>
                       }
                       </table>

};
                   
                               
declare function desanti:display-tags($collection, $dataType, $mode){  
  let $label := if($dataType = "subject") then "concepts" else "personnes"
  return <div class="{ $mode }">
    <h6>{ $label }</h6>
    <span>{
      for $term in $collection
      group by $term
      order by $term collation "?lang=fr"
      let $occurrences := count(
        ft:search('Desanti', $term)/..[local-name() = $dataType][
          ancestor::*:ead/
          parent::document-node()
        ]
      )
      return if($mode = "cloud") then (
        <span><a style="font-size:{
          $occurrences idiv 10 + 1
        }em;padding:{
          $occurrences idiv 10
        }px;" title="{
          $occurrences
        }" href="/desanti/{$label}/{$term}">{$term}</a></span>
      ) else (
        <span class="{
          $occurrences
        }"><a href="/desanti/{$label}/{$term}">{ $term }</a>
          ({ $occurrences })
        </span>
      )
    }</span>
  </div>
};

(: 
************************************
tests : JSON, etc. 
************************************
:)
declare %restxq:path("{$project}/ead/xml")
        %output:method("xml")
function desanti:ead-to-xml($project) {
    let $ead := <json type="object">
        <items type="array">{
            for $item in collection('Desanti')//*:ead//*:c
            let $type :=   if($item/@level='otherlevel') then 'insert' else 'pièce'
            let $label := $item/*:did/*:unitid/@identifier   
            let $titre :=   if($item/*:did/*:unittitle) then $item/*:did/*:unittitle/text() else 'pièce sans titre'
            let $node := <item type="object">
                        <type>{$type}</type>
                        <label>{string($label)}</label>
                        <titre>{$titre} </titre>
                        
                    </item>
            return $node
            }</items>
            </json>

   return json:parse('{
  "title": "Talk On Travel Pool",
  "link": "http://www.flickr.com/groups/talkontravel/pool/",
  "description": "Travel and vacation photos from around the world.",
  "modified": "2009-02-02T11:10:27Z",
  "generator": "http://www.flickr.com/"
}')
};

declare %restxq:path("{$project}/ead/json")
        %output:method("json")
function desanti:ead-to-json($project) {
    
    let $ead := desanti:ead-to-xml($project)
   return json:serialize-ml($ead)
};
 
    
    
    
  