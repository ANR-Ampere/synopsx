module namespace brede = 'http://ahn.ens-lyon.fr/brede';

import module namespace ahn = 'http://ahn.ens-lyon.fr' at 'ahn.xqm';

declare namespace db = 'http://basex.org/modules/db';
declare namespace tei = 'http://www.tei-c.org/ns/1.0/';




declare %restxq:path("brede")
        %output:method("xhtml")
        %output:omit-xml-declaration("no")
        %output:doctype-public("xhtml")
function brede:index() {
  let $params := map {
      "project" := "brede",
      "dataType" := "home"
      
    }                  
    return ahn:html($params)
};

declare function brede:head($params){
  <head>
      <title>{map:get($params,"project")}</title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0"/>     
      <link href="http://ahn-basex.cbp.ens-lyon.fr:8984/static/css/bootstrap.css" rel="stylesheet" media="screen"/>  
      <link href="http://ahn-basex.cbp.ens-lyon.fr:8984/static/css/brede.css" rel="stylesheet" media="screen"/>  
    </head>
};

declare function brede:header($params){
  <div class="container" id="header">
    <div class="row">
      <div class="span5">
        <img src="http://montesquieu.ens-lyon.fr/local/cache-gd2/0eefbd613d601ceb4043bb449469c316.png" alt="Accueil"/>
      </div>
      <div class="span2 offset5">
        <img src="http://ara-domu-omeka.ens-lyon.fr/ahn/sites/all/themes/kitahn/img/logo_Partenaire.png" alt="ENS Lyon"/>
      </div>
    </div>
    <div class="row">
      <div class="span12">
      <a href="/brede" title="Accueil du site"><img src="http://ahn-basex.cbp.ens-lyon.fr:8984/static/img/bandeau-brede.png" alt="Bibliothèque Virtuelle Montesquieu"/></a>
      </div>
    </div>
  </div>
};
declare function brede:primary-nav($params){
   <div class="container navbar" id="primary-nav">
    <ul class="nav">
      <li><a href="/brede/base">Base complète</a></li>
      <li><a href="/brede/ms2539">Catalogue de la Brède (ms 2539)</a></li>
      <li><a href="/brede/bmbordeaux">Notices BM Bordeaux</a></li>
      <li><a href="/brede/catalogue1926">Catalogue de 1926</a></li>
      <li><a href="/brede/autres">Autres notices</a></li>
    </ul>
  </div>
};




declare function brede:primary($params){
let $dataType := map:get($params,"dataType")
let $value := map:get($params,"value")
        


return
  <div id="primary" class="{$dataType}">

       
         
         {let $block :=
         
         switch($dataType)
         case "home" return <span>
                                <h2>La Bibliothèque Virtuelle Montesquieu</h2>
                                <p>Présenter le projet  (éléments à placer dans quelle source xml ?)</p>
                            </span>
         
         
         
         case "base" return <span>
                                <h2>Base complète</h2>
                                <p>Présenter le principe (croisement de diverses sources de données, etc.)  (éléments à placer dans quelle source xml ?)</p>
                             </span>
                                
                                
                                
                                
         case "ms2539" return 
                        <span>
                             {brede:ms2539-head($params)}
                              <p>Présenter la nouvelle édition du catalogue (éléments à placer dans le teiHeader du catalogue)</p>
                              <p><a href="/brede/theme">Lire le catalogue</a></p>
                          </span>
                                                        
                                                        
                                                        
         case "theme" return
                    <span>
                           {brede:ms2539-head($params)}
                           {let $theme-id := 
                                if (empty($value)) then "1"
                                else $value
                            let $theme := db:open('Brede')/*[local-name()='TEI']/*[local-name()='text']/*[local-name()='body']/*[local-name()='div'][@type=$dataType][number($theme-id)]
                            let $prev := $theme/preceding-sibling::*[local-name()='div'][@type=$dataType]
                            let $next := $theme/following-sibling::*[local-name()='div'][@type=$dataType]
                            (: ici calcul ok le total des éléments est l'id du dernier :)
                            let $last := count(db:open('Brede')/*[local-name()='TEI']/*[local-name()='text']/*[local-name()='body']/*[local-name()='div'][@type=$dataType])
                            let $label := $theme/*[local-name()='head']     
                            let $block :=
                                <span>
                                
                                <hr/>
                                
                                {if(not(empty($prev))) then <span class="prev"><a class="first" href="/brede/theme/1" title="Aller au premier thème">◀◀</a> | <a class="prev" href="/brede/theme/{sum(number($theme-id)-1)}" title="Aller au thème précédent">◀</a> | </span> else ""}  
                                {if(not(empty($next))) then <span class="next"> | <a class="next" href="/brede/theme/{sum(number($theme-id)+1)}" title="Aller au thème suivant">▶</a> | <a class="last" href="/brede/theme/{$last}" title="Aller au dernier thème">▶▶</a></span> else ""}
                                
                                <hr/>
                                
                                <h4>{$label}</h4>
                                    {for $entry in $theme/*[local-name()='div']
                                    return brede:display-entry($entry)}</span>
                                return  $block
                    }
                    </span>
              
        case "vedette" return
                    <span>
                    {brede:ms2539-head($params)}
                    <h4>{$value}</h4>
                    
                    {for $entry in db:open('Brede')/*[local-name()='TEI']//*[local-name()='div'][@type='entry'][matches(@ana, normalize-space($value))]
                         return brede:display-entry($entry)
                    }
                        
                    </span>      
              
              
       case "entry" return
                     <span>
                    {brede:ms2539-head($params)}
                    
                    {let $entry-id := 
                        if (empty($value)) then "1"
                        else $value
                    let $entry := db:open('Brede')/*[local-name()='TEI']//*[local-name()='div'][@type=$dataType][@n = $value]
                    let $prev := $entry/preceding-sibling::*[local-name()='div'][@type=$dataType]
                    let $next := $entry/following-sibling::*[local-name()='div'][@type=$dataType]
                    let $last := string(db:open('Brede')/*[local-name()='TEI']/*[local-name()='text']/*[local-name()='body']/*[local-name()='div'][last()]/*[local-name()='div'][last()]/@n)
                     let $block :=
                     <span>
                                <hr/>
                                {if(not(empty($prev))) then <span class="prev"><a class="first" href="/brede/entry/1" title="Aller à la première entrée">◀◀</a> | <a class="prev" href="/brede/entry/{sum(number($entry-id)-1)}" title="Aller à l'entrée précédente">◀</a> | </span> else ""}  
                                {if(not(empty($next))) then <span class="next"> | <a class="next" href="/brede/entry/{sum(number($entry-id)+1)}" title="Aller à l'entrée suivante">▶</a> | <a class="last" href="/brede/entry/{$last}" title="Aller à la dernière entrée">▶▶</a></span> else ""}
                                <hr/>
                                {brede:display-entry($entry)}
                     </span>
                     
                     return $block
                    }</span>

      
        

       case "page" return
                    <span>
                    {brede:ms2539-head($params)}
                    
                     {
                     let $first := string(db:open('Brede')/*[local-name()='TEI']/*[local-name()='text']/*[local-name()='body']/*[local-name()='div'][1]/*[local-name()='pb'][1]/@n)
                     let $page-id := 
                        if (empty($value)) then $first
                        else $value
                    let $page := db:open('Brede')/*[local-name()='TEI']/*[local-name()='text']/*[local-name()='body']//*[local-name()='pb'][@n = normalize-space($page-id)]
                    let $prev := db:open('Brede')/*[local-name()='TEI']/*[local-name()='text']/*[local-name()='body']//*[local-name()='pb'][@n = string(sum(number(normalize-space($page-id))-1))]
                    let $next := db:open('Brede')/*[local-name()='TEI']/*[local-name()='text']/*[local-name()='body']//*[local-name()='pb'][@n = string(sum(number(normalize-space($page-id))+1))]
                    let $last := string(db:open('Brede')/*[local-name()='TEI']/*[local-name()='text']/*[local-name()='body']/*[local-name()='div'][last()]/*[local-name()='pb'][last()]/@n)
                   
                    
                    let $block := <span>
                    
                                <hr/>
                                {if(not(empty($prev))) then <span class="prev"><a class="first" href="/brede/page/{$first}" title="Aller à la première page">◀◀</a> | <a class="prev" href="/brede/page/{sum(number($page-id)-1)}" title="Aller à la page précédente">◀</a> | </span> else ""}  
                                {if(not(empty($next))) then <span class="next"> | <a class="next" href="/brede/page/{sum(number($page-id)+1)}" title="Aller à la page suivante">▶</a> | <a class="last" href="/brede/page/{$last}" title="Aller à la dernière page">▶▶</a></span> else ""}
                                <hr/>
                                <h4>Page {$page-id}</h4>
                    {(: Cas page inexistante :)
                    if (empty($page)) then <span>Pas de page numérotée {$page-id} dans le ms2539</span>
                    (: Cas page vide -> Affichage page + Page suivante :)
                    else if ($page/@type) then <span>Page {$page-id} : {string($page/@type)} dans le ms2539 [{string($page/@ana)}]</span>
                    (: Cas page  et page suivante dans div différentes :)
                    else if (empty($page/following-sibling::*[local-name()='pb'])) then 
                                <span>
                                {for $entry in $page/following-sibling::*[local-name()='div'][@type='entry'] | db:open('Brede')/*[local-name()='TEI']//*[local-name()='div'][@type='entry'][following-sibling::*[local-name()='pb'][@n = string(sum(number(normalize-space($page-id))+1))]]
                                return brede:display-entry($entry)
                                
                                }
                                </span>
                                
                    (: Cas page  et page suivante dans la même div :)
                    else <span>
                            {for $entry in db:open('Brede')/*[local-name()='TEI']//*[local-name()='div'][@type='entry'][preceding-sibling::*[local-name()='pb'][@n = normalize-space($page-id)]][following-sibling::*[local-name()='pb'][@n = string(sum(number(normalize-space($page-id))+1))]]
                                return brede:display-entry($entry)}
                        </span>
                    }</span>
                    return $block
                    }
                    
                    </span>
                    
                    
       
                    
       case "fulltext" return
                    <span>
                    {brede:ms2539-head($params)}
                   {let $block := 
                   
                   if(empty($value)) then brede:display-text-search-form($params)
                   else <span> <h4>Résultats pour «&#160;{$value}&#160;»</h4>
                    
                    {for $entry in db:open('Brede')/*[local-name()='TEI']//*[local-name()='div'][@type='entry'][matches(., $value)]
                                    return brede:display-entry($entry)
                    }
                    </span>
                    return $block
                    }</span>        

                    
       case "bmbordeaux" return
             <span>
             <h2>Notices de la Bibliothèque Municipale de Bordeaux</h2>
             
             {let $notices :=
                    if (empty($value)) then <span>
                                            <p>Présenter à quoi correspond l'extraction du catalogue de la BM Bordeaux (éléments à placer dans quelle source xml ?)</p>
                                            <p>Remerciements</p>
                                            <p>Date de l'extraction</p>
                                             <p><a href="/brede/bmbordeaux/1">Lire les notices</a></p>
                                         </span>
                    else if (empty(db:open('Brede')/*[local-name()='collection']/*[local-name()='record'][number($value)])) then 
                                            <span>Il n'existe pas de notice n°{$value}</span>
                    else <span>
                    
                    {for $notice in db:open('Brede')/*[local-name()='collection']/*[local-name()='record'][number($value)]
                    let $entry-id := $notice/*[local-name()='datafield'][@tag='321']/*[local-name()='subfield'][matches(text(), 'Desgraves')][matches(text(), 'Catalogue')]/normalize-space(substring-after(text(), '°'))
                    let $cote := $notice/*[@tag='852']/*[@code='j']
                    let $prev := $notice/preceding-sibling::*[local-name() = 'record']
                    let $next := $notice/following-sibling::*[local-name() = 'record']
                     (: ici calcul ok le total des éléments =n° du dernier :)
                    let $last := count(db:open('Brede')/*[local-name()='collection']/*[local-name()='record'])
                    
                    return <span>
                                    <hr/>
                                 {if(not(empty($prev))) then <span class="prev"><a class="first" href="/brede/bmbordeaux/1" title="Aller à la première notice">◀◀</a> | <a class="prev" href="/brede/bmbordeaux/{sum(number($value)-1)}" title="Aller à la notice précédente">◀</a> | </span> else ""} 
                                 {if(not(empty($next))) then <span class="next"> | <a class="next" href="/brede/bmbordeaux/{sum(number($value)+1)}" title="Aller à la notice suivante">▶</a> | <a  class="last" href="/brede/bmbordeaux/{$last}" title="Aller à la dernière notice">▶▶</a></span> else ""}
                                    <hr/>
                                <h5>Notice BM Bordeaux n°{$value} (cote : {$cote})
                                <br/>correspondant à l'<a href="/brede/entry/{$entry-id}">entrée du <em>Catalogue de la Brède</em> n°{$entry-id}</a></h5>
                                 
                                <p style="background:#eee;"><a href="#" title="Bibliothèque Municipale de Bordeaux : permalien ?">Lire la notice sur le site de la Bibliothque Municipale de Bordeaux</a>
                                <br/>(Les permaliens ne correspondent pas aux id des notices MARC... A voir avec eux...)</p>
                                
                                {for $item in $notice/*[@tag='200']
                                    return <h6>{$item}</h6>
                                }
                                
                                {for $item in $notice/*[@tag > '200']
                                    return <p>{$item}</p>
                                }
                                
                           </span>
                    }
                  
                    </span>
               return $notices
         }</span>              
        
        
        case "catalogue1926" return
             <span>
                    <h2>Catalogue de vente de 1926</h2>
                    <p>Présenter le catalogue de 1926  (éléments à placer dans quelle source xml ?)</p>
             </span>
             
        case "autres" return
             <span>
                    <h2>Autres notices</h2>
                    <p>Présenter les autres notices : notices H. de Bellaigue...  (éléments à placer dans quelle source xml ?)</p>
             </span>

      default return <span>Page introuvable</span>
            
            
      return $block
  }  
  
  
  
  </div>
    
};


declare function brede:secondary($params){

let $dataType := map:get($params,"dataType")
let $value := map:get($params,"value")
 
 
 
 let $block := 
 <div id="secondary" class="{$dataType}">{
 switch($dataType)
        case "home" return <span>Barre latérale accueil à faire</span>
        case "base" return <span>Barre latérale base complète à faire</span>
        case "ms2539" return brede:ms2539-search-block($params)
        case "theme"  return brede:ms2539-search-block($params)
        case "entry"  return brede:ms2539-search-block($params)
        case "page"  return brede:ms2539-search-block($params)
        case "vedette"  return brede:ms2539-search-block($params)
        case "fulltext"  return brede:ms2539-search-block($params)
        case "bmbordeaux"  return <span><a title="Bibliothèque Municipale de Bordeaux" href="https://bibliotheque.bordeaux.fr/"><img src="https://bibliotheque.bordeaux.fr/img/logo_top3.png" /></a></span>
        default return <span>Non trouvé</span>}    
  </div>
  
  return $block
  
    
};


(:declare function brede:scripts_js($params) {
       <div id="scripts_js">
         <script src="http://code.jquery.com/jquery.js"></script>
        <script src="http://ahn-basex.cbp.ens-lyon.fr:8984/static/js/bootstrap.min.js"></script>
        <script src="http://ahn-basex.cbp.ens-lyon.fr:8984/static/js/brede.js"></script>
        </div>
    
};:)

declare function brede:ms2539-head($params){
        <div id="ms2539-head">
                <h2><em>Le Catalogue de la Brède</em></h2>
                 <h3>Nouvelle édition du ms 2539, 2013</h3>
        </div>
};


declare function brede:ms2539-search-block($params){
    let $dataType := map:get($params,"dataType")
    let $value := map:get($params,"value")
    
    return <span id="ms2539-search-block">
            
            <h4>Recherche</h4>
            
            
           <form id="theme-search"> 
           <select onchange="window.location='/brede/theme/'+this.value;">
           <option>par thème</option>
           {for $theme in collection("Brede")//*[local-name()='div'][@type='theme']
                  let $label := $theme/*[local-name()='head']/text()
                  let $id := sum(count($theme/preceding-sibling::*[local-name()='div'][@type='theme'])+1)
                  return <option value="{$id}">{$label}</option>}
            </select>
            </form>
            
            
            <form id="vedette-search">
           <select onchange="window.location='/brede/vedette/'+this.value;">
            <option>par vedette</option>
           {let $entries := 
                 for $ana in collection("Brede")//*[local-name()='div'][@type='entry']/@ana
                 return tokenize(normalize-space(string($ana)), ';')
            return
                 for $label in distinct-values($entries)
                 order by $label
                 return <option value="{normalize-space($label)}">{normalize-space($label)}</option>}  
            </select>
            </form>


            <form id="entry-search">
            <label>par n° d'entrée (de 1 à 3236)</label>
            <input onBlur="if(this.value.length > 0) window.location='/brede/entry/'+this.value;" type="text" size="4" maxlength="4"/>
            </form>

            
            <form id="page-search">
            <label>par n° de page (de 3 à 598)</label>
            <input onBlur="if(this.value.length > 0) window.location='/brede/page/'+this.value;" type="text" size="3" maxlength="3"/>
            
            </form>

            {brede:display-text-search-form($params)}
            
            <button>⚑</button>
            
            </span>
            
            
};

declare function brede:display-entry($entry){
                                    let $entry-id := $entry/@n
                                    let $entry-label := $entry/@ana
                                    let $marc := <ul class="bmb">
                                    {
                                    for $record in (db:open('Brede')/*[local-name()='collection']/*[local-name()='record'][*[local-name()='datafield'][@tag='321']/*[local-name()='subfield'][matches(text(), concat('^Desgraves.+°\s?', string($entry-id), '$'))]])
                                    (:for $record in (db:open('Brede')/*[local-name()='collection']/*[local-name()='record'][*[local-name()='datafield'][@tag='321']/*[local-name()='subfield'][text() contains text 'Desgraves']]):)
                                        let $notice-id := $record/sum(count(preceding-sibling::*[local-name()='record'])+1)
                                        return <li><a href="/brede/bmbordeaux/{string($notice-id)}">Notice BM Bordeaux n°{$notice-id}</a></li>
                                    }</ul>
                                    
                                    let $expl := <span class="expl">{
                                    for $item in db:open('Brede')/*[local-name()='exemplaires']/*[local-name()='list']/*[local-name()='item'][@n=$entry-id]
                                    return <ul>{
                                                for $ptr in $item/*[local-name()='ptr']
                                                return <li><a title="{string($ptr/@target)}" href="{string($ptr/@target)}">Exemplaire numérisé ({string($item/@ana)})</a></li>
                                               }</ul>
                                    }</span>
                           return <span>
                                   <h5>{string($entry-id)} | {string($entry-label)}</h5>
                                   {$entry}
                                   {$marc}
                                   {$expl}
                          </span>
};


declare function brede:display-text-search-form($params){
            <form id="text-search">
            <label>plein texte (deux caractères minimum)</label>
            <input onBlur="if(this.value.length > 1) window.location='/brede/fulltext/'+this.value; else this.value = 'deux caractères minimum'" type="text" />
            </form>
};